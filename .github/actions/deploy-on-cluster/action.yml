name: "Deploy Keptn on GH cluster"
description: "Creates a Kind cluster and deploys Keptn"
inputs:
  kind-version:
    required: false
    description: "Version of kind that should be used"
    # renovate: datasource=github-releases depName=kubernetes-sigs/kind
    default: "v0.22.0"
  k8s-version:
    required: false
    description: "Kubernetes version that should be used"
    # renovate: datasource=github-releases depName=kubernetes/kubernetes
    default: "v1.27.3"
  runtime_tag:
    description: "Tag for the runner image"
    required: true
  cluster-name:
    required: false
    description: "Name of the kind cluster"
    default: "test-cluster"
  values-file:
    required: false
    description: "Values file used for Keptn installation configuration"
    default: "values.yaml"
  cert-manager-io-enabled:
    required: false
    description: "Decides whether to use cert-manager.io"
    default: "cert_manager_io_off"
runs:
  using: "composite"
  steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
        cache-dependency-path: '**/go.sum'
        check-latest: true

    - name: "Create single kind Cluster"
      uses: helm/kind-action@0025e74a8c7512023d06dc019c617aa3cf561fde # v1.10.0
      with:
        cluster_name: ${{ inputs.cluster-name }}
        version: ${{ inputs.kind-version }}
        node_image: "kindest/node:${{ inputs.k8s-version }}"
        kubectl_version: ${{ inputs.k8s-version }}

    - name: Install cert-manager.io
      if: inputs.cert-manager-io-enabled == 'cert_manager_io_on'
      env:
        # renovate: datasource=github-releases depName=cert-manager/cert-manager
        CERT_MANAGER_IO_VERSION: "v1.14.4"
      shell: bash
      run: |
        kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/$CERT_MANAGER_IO_VERSION/cert-manager.yaml
        kubectl wait --for=condition=Available deployment/cert-manager-webhook -n cert-manager --timeout=120s
        kubectl wait --for=condition=ready pod -l app=webhook -n cert-manager --timeout=60s
